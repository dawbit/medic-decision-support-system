// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using medic_api.DAL;

namespace medic_api.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("medic_api.DAL.Models.MedicalData", b =>
                {
                    b.Property<Guid>("MedicalDataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<int>("Age")
                        .HasColumnName("age")
                        .HasColumnType("integer");

                    b.Property<int>("BloodPressure")
                        .HasColumnName("bloodpressure")
                        .HasColumnType("integer");

                    b.Property<double>("Bmi")
                        .HasColumnName("bmi")
                        .HasColumnType("double precision");

                    b.Property<double>("DiabetesPedigreeFunction")
                        .HasColumnName("diabetespedigreefunction")
                        .HasColumnType("double precision");

                    b.Property<int>("Glucose")
                        .HasColumnName("glucose")
                        .HasColumnType("integer");

                    b.Property<int>("Insulin")
                        .HasColumnName("insulin")
                        .HasColumnType("integer");

                    b.Property<bool?>("Prediction")
                        .HasColumnName("prediction")
                        .HasColumnType("boolean");

                    b.Property<int>("Pregnancies")
                        .HasColumnName("pregnancies")
                        .HasColumnType("integer");

                    b.Property<bool?>("Result")
                        .HasColumnName("result")
                        .HasColumnType("boolean");

                    b.Property<int>("SkinThickness")
                        .HasColumnName("skinthickness")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnName("userid")
                        .HasColumnType("uuid");

                    b.HasKey("MedicalDataId");

                    b.HasIndex("UserId");

                    b.ToTable("medicaldata");
                });

            modelBuilder.Entity("medic_api.DAL.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .HasColumnName("firstname")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnName("lastname")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnName("password")
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .HasColumnName("role")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .HasColumnName("username")
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("2440bd90-d285-4b5b-b6e8-f8808c101763"),
                            FirstName = "yFdWByrf/mq61BKxY6tsxc7eqkFU0ytljU9G6yyet2S1i/UV4X8+bQq7TntEHe3CBgBGzuBiXi0GaWeGDMTeTou0+YN2cQYlt5xh6qHhREAHK1UHWcfaqySpUhz4bCRBDxbY3KBuNr3dn2E/GDc61fn8tQjm4emE33e9utwoECU1BqrJ0yxa4/vjd8lPVoQJlnvi7XWFJ9tC2aJbQmDgNOEdlBQ8w72XNkednD9T5r5ugmVT8JJ3YS+Xc0d16tqMMqHXmHAk3nJAJW5xULLFlK6OkMpJVXjLiP/ieUDS5Y/a3p4TWj8C2f3fPh1N/gHq5/gk9uCGfdHTPPtC2jlBEA==",
                            LastName = "aBGT9HXVi/8Q7GtmPX+aQbimBRjQl8vaCtNmh0MlT3BuEvewZ7DkJfgFz00XUFb4t36PWZg+w+i0dW8/BgMyGjOMTWsH+w0KDww72G2hPf/6iT5bKooDRi0IK7nf0Lj0YV0PgfChmiwzzld/X6xmKSp7LR4HMC+j6VBXvtpM6Vl0OTteftD4cf70WBd+CU0TJJ1+Qq+Ww7sN10RJ/dnTfyUpHuvxnl36MB9/2kYdZWvwdnTaV+mrvtJP3ZvR8niqOqoijomm+tKH/CS8+t+J66dyfeaAIdYFRkrKkw0xjqjc29tcnXep4OdBevfvu8hGwDNBvFvPbEjYtjbXrwEGdA==",
                            Password = "vFW18BRQhMgpyPbKegfXukkcTBL0Xoi4BSVPU2MqIAFsJ7ZP",
                            Role = "Admin",
                            UserName = "Admin"
                        });
                });

            modelBuilder.Entity("medic_api.DAL.Models.MedicalData", b =>
                {
                    b.HasOne("medic_api.DAL.Models.User", "User")
                        .WithMany("MedicalDataset")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
